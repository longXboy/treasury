// Code generated by ent, DO NOT EDIT.

package confirm

import (
	"entgo.io/ent/dialect/sql"
	"github.com/longxboy/treasure/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLTE(FieldID, id))
}

// RequestID applies equality check predicate on the "request_id" field. It's identical to RequestIDEQ.
func RequestID(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldRequestID, v))
}

// ManagerID applies equality check predicate on the "manager_id" field. It's identical to ManagerIDEQ.
func ManagerID(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldManagerID, v))
}

// Approved applies equality check predicate on the "approved" field. It's identical to ApprovedEQ.
func Approved(v bool) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldApproved, v))
}

// RequestIDEQ applies the EQ predicate on the "request_id" field.
func RequestIDEQ(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldRequestID, v))
}

// RequestIDNEQ applies the NEQ predicate on the "request_id" field.
func RequestIDNEQ(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNEQ(FieldRequestID, v))
}

// RequestIDIn applies the In predicate on the "request_id" field.
func RequestIDIn(vs ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldIn(FieldRequestID, vs...))
}

// RequestIDNotIn applies the NotIn predicate on the "request_id" field.
func RequestIDNotIn(vs ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNotIn(FieldRequestID, vs...))
}

// RequestIDGT applies the GT predicate on the "request_id" field.
func RequestIDGT(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGT(FieldRequestID, v))
}

// RequestIDGTE applies the GTE predicate on the "request_id" field.
func RequestIDGTE(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGTE(FieldRequestID, v))
}

// RequestIDLT applies the LT predicate on the "request_id" field.
func RequestIDLT(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLT(FieldRequestID, v))
}

// RequestIDLTE applies the LTE predicate on the "request_id" field.
func RequestIDLTE(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLTE(FieldRequestID, v))
}

// ManagerIDEQ applies the EQ predicate on the "manager_id" field.
func ManagerIDEQ(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldManagerID, v))
}

// ManagerIDNEQ applies the NEQ predicate on the "manager_id" field.
func ManagerIDNEQ(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNEQ(FieldManagerID, v))
}

// ManagerIDIn applies the In predicate on the "manager_id" field.
func ManagerIDIn(vs ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldIn(FieldManagerID, vs...))
}

// ManagerIDNotIn applies the NotIn predicate on the "manager_id" field.
func ManagerIDNotIn(vs ...int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldNotIn(FieldManagerID, vs...))
}

// ManagerIDGT applies the GT predicate on the "manager_id" field.
func ManagerIDGT(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGT(FieldManagerID, v))
}

// ManagerIDGTE applies the GTE predicate on the "manager_id" field.
func ManagerIDGTE(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldGTE(FieldManagerID, v))
}

// ManagerIDLT applies the LT predicate on the "manager_id" field.
func ManagerIDLT(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLT(FieldManagerID, v))
}

// ManagerIDLTE applies the LTE predicate on the "manager_id" field.
func ManagerIDLTE(v int64) predicate.Confirm {
	return predicate.Confirm(sql.FieldLTE(FieldManagerID, v))
}

// ApprovedEQ applies the EQ predicate on the "approved" field.
func ApprovedEQ(v bool) predicate.Confirm {
	return predicate.Confirm(sql.FieldEQ(FieldApproved, v))
}

// ApprovedNEQ applies the NEQ predicate on the "approved" field.
func ApprovedNEQ(v bool) predicate.Confirm {
	return predicate.Confirm(sql.FieldNEQ(FieldApproved, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Confirm) predicate.Confirm {
	return predicate.Confirm(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Confirm) predicate.Confirm {
	return predicate.Confirm(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Confirm) predicate.Confirm {
	return predicate.Confirm(sql.NotPredicates(p))
}
